{"version":3,"sources":["reducers/mattersReducer.js","reducers/index.js","actions/matters/types.js","utils/store.js","api/matters.js","components/lib/Avatar/Avatar.jsx","components/lib/Avatar/index.js","components/lib/Button/Button.jsx","components/lib/Button/index.js","components/lib/Loader/Loader.jsx","components/lib/Loader/index.js","components/lib/SideList/SideList.jsx","components/lib/SideList/index.js","components/lib/ToolBar/ToolBar.jsx","components/lib/ToolBar/index.js","components/sections/matters/MatterListItem.jsx","actions/matters/matterActions.js","components/sections/matters/MatterViewer.jsx","utils/utilFuncs.js","components/sections/matters/Matters.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["defaultState","mattersList","selectedId","rootReducer","combineReducers","matters","state","action","type","payload","filter","matter","id","map","readStatus","middlewareEnhancer","applyMiddleware","thunkMiddleware","composedEnhancers","compose","store","createStore","undefined","MATTERS","from","summary","content","date","Avatar","display","className","data-test","defaultProps","Button","onClick","children","Loader","SideList","title","items","render","item","key","ToolBar","brand","MatterListItem","selected","selectMatter","MatterStatusIcons","Email","StarBorder","connect","MatterViewer","day","getDate","monthIndex","getMonth","year","getFullYear","formatDate","Date","split","i","length","Matters","getMatters","selectedMatterId","useState","contentLoaded","setLoadedStatus","useEffect","then","_","dispatch","a","Promise","resolve","setTimeout","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"uQAQMA,EAAe,CACjBC,YAAa,GACbC,YAAa,GCFFC,EAJKC,YAAgB,CAChCC,QDaW,WAAiC,IAExCJ,EAFQK,EAA+B,uDAAzBN,EAAcO,EAAW,uCAG3C,OAAQA,EAAOC,MACX,IErBmB,cFsBf,OAAO,eAAIF,EAAX,CAAkBL,YAAaM,EAAOE,UAC1C,IEtBqB,gBFwBjB,OADAR,EAAcK,EAAML,YAAYS,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAOL,EAAOE,QAAQG,MACvE,eAAIN,EAAX,CAAkBL,gBACtB,IExBqB,gBFyBjB,OAAO,eAAIK,EAAX,CAAkBJ,WAAYK,EAAOE,UACzC,IEzBmB,cF8Bf,OAJAR,EAAcK,EAAML,YAAYY,KAAI,SAAAF,GAEhC,OADGA,EAAOC,KAAOL,EAAOE,QAAQG,KAAID,EAAOG,YAAa,GACjDH,KAEJ,eAAIL,EAAX,CAAkBL,gBACtB,QACI,OAAOK,MG9BbS,EAAqBC,YAAgBC,KACrCC,EAAoBC,YAAQJ,GAGnBK,EAFDC,YAAYlB,OAAamB,EAAWJ,G,iCCH5CK,EAAU,CACZ,CACIX,GAAI,EACJY,KAAM,aACNC,QAAS,oCACTC,QAAS,qeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,aACNC,QAAS,iBACTC,QAAS,qeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,YACNC,QAAS,oBACTC,QAAS,oeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,cACNC,QAAS,0CACTC,QAAS,seAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,cACNC,QAAS,YACTC,QAAS,seAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,aACNC,QAAS,mBACTC,QAAS,qeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,aACNC,QAAS,0CACTC,QAAS,qeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,YACNC,QAAS,0CACTC,QAAS,oeAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,cACNC,QAAS,0CACTC,QAAS,seAETZ,YAAY,EACZa,KAAM,cAEV,CACIf,GAAI,EACJY,KAAM,cACNC,QAAS,0CACTC,QAAS,seAETZ,YAAY,EACZa,KAAM,eCtFRC,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACX,yBACIC,UAAU,SACVC,YAAU,UACTF,IAITD,EAAOI,aAAe,CAClBH,QAAS,IAGED,IClBAA,EDkBAA,EETTK,EAAS,SAAC,GAAD,IACKzB,EADL,EACKA,KACA0B,EAFL,EAEKA,QACAJ,EAHL,EAGKA,UACAK,EAJL,EAIKA,SAJL,OAMX,4BACID,QAASA,EACTJ,UAAS,UAAKA,EAAL,oBAA0BtB,IAClC2B,IAITF,EAAOD,aAAe,CAClBxB,KAAM,UACNsB,UAAW,GACXI,QAAS,kBAAM,IAGJD,IC5BAA,ED4BAA,EEtBTG,EAAS,SAAC,GAAD,IAAEN,EAAF,EAAEA,UAAF,OAAiB,yBAAKA,UAAS,UAAKA,EAAL,cAE9CM,EAAOJ,aAAe,CAClBF,UAAU,IAGCM,ICZAA,EDYAA,EEHTC,EAAW,SAAC,GAKO,IAJHC,EAIE,EAJFA,MACAC,EAGE,EAHFA,MACAT,EAEE,EAFFA,UACAU,EACE,EADFA,OAGlB,OACI,yBAAKV,UAAS,oBAAeA,IACzB,yBAAKA,UAAU,SACVQ,GAEL,4BACKC,EAAM1B,KAAI,SAAA4B,GAAI,OAAI,kBAAC,WAAD,CAAUC,IAAKD,EAAK7B,IAAK4B,EAAOC,UAOnEJ,EAASL,aAAe,CACpBM,MAAO,GACPC,MAAO,GACPT,UAAW,GACXU,OAAQ,kBAAM,IAGHH,ICpCAA,EDoCAA,EE9BTM,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,yBAAKd,UAAU,YACX,yBAAKA,UAAU,SAASc,EAAxB,sBAKZD,EAAQX,aAAe,CACnBY,MAAO,IAGID,IClBAA,EDkBAA,E,gBEFTE,EAAiB,SAAC,GAOO,IANHjC,EAME,EANFA,GACAY,EAKE,EALFA,KACAC,EAIE,EAJFA,QACAqB,EAGE,EAHFA,SACAC,EAEE,EAFFA,aACAjC,EACE,EADFA,WAExB,OACI,wBACIgB,UAAWgB,EAAW,WAAY,GAClCZ,QAAS,kBAAMa,EAAanC,KAC5B,kBAAC,EAAD,CAAQiB,QAASL,EAAK,KACtB,yBAAKM,UAAU,UACX,yBAAKA,UAAU,QAAQN,GACvB,yBAAKM,UAAU,WACVL,IAGT,kBAAC,EAAD,CAAmBX,WAAYA,MAK3C+B,EAAeb,aAAe,CAC1BpB,IAAK,EACLY,KAAM,GACNC,QAAS,GACTqB,UAAU,EACVC,aAAc,kBAAM,IASxB,IAAMC,EAAoB,SAAC,GAAkB,IAAjBlC,EAAgB,EAAhBA,WACxB,OACI,yBAAKgB,UAAU,gBACVhB,EAAa,KAAO,kBAACmC,EAAA,EAAD,MACrB,kBAACC,EAAA,EAAD,CAAYpB,UAAU,WAKlCkB,EAAkBhD,aAAe,CAC7Bc,YAAY,GAGDqC,kBAAQ,KAAM,CACzBJ,aC7BwB,SAAAnC,GAAE,MAAK,CAC/BJ,KdvCyB,gBcwCzBC,QAASG,KD0BEuC,CAEZN,GEpDGO,EAAe,SAAC,GAKO,IAJH5B,EAIE,EAJFA,KACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,QACAC,EACE,EADFA,KAyCtB,MAAuB,qBAATH,EAnCN,yBAAKM,UAAU,UACX,yBAAKA,UAAU,WACVL,GAEL,yBAAKK,UAAU,QACX,kBAAC,EAAD,CAAQD,QAASL,EAAK,KACrBA,EACgB,qBAATG,EACJ,yBAAKG,UAAU,QChCb,SAAAH,GACtB,IAOI0B,EAAM1B,EAAK2B,UACXC,EAAa5B,EAAK6B,WAClBC,EAAO9B,EAAK+B,cAEhB,OAAOL,EAAM,IAVI,CACT,UAAW,WAAY,QACvB,QAAS,MAAO,OAAQ,OACxB,SAAU,YAAa,UACvB,WAAY,YAMUE,GAAc,IAAME,EDoBPE,CAAW,IAAIC,KAAKjC,KACzC,MAGV,6BACA,yBAAKG,UAAU,WACVJ,EAAQmC,MAAM,MAAMhD,KAAI,SAAAiD,GAAC,OAAI,2BAAIA,OAEtC,yBAAKhC,UAAU,WACX,kBAAC,EAAD,qBACA,kBAAC,EAAD,qBACA,kBAAC,EAAD,kBAQR,yBAAKA,UAAU,wBACX,kBAAC,EAAD,CAAQA,UAAU,gBAClB,kBAAC,EAAD,CAAQA,UAAU,oBASlCsB,EAAapB,aAAe,CACxBP,QAAS,GACTC,QAAS,IAGb,IAKeyB,eALS,SAAC,GAAe,IAAd9C,EAAa,EAAbA,QAChBM,EAASN,EAAQJ,YAAYS,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAOP,EAAQH,cAC1E,OAAOS,EAAOoD,OAASpD,EAAO,GAAK,KAGxBwC,CAAyBC,GErDlCY,EAAU,SAAC,GAIa,IAHH3D,EAGE,EAHFA,QACA4D,EAEE,EAFFA,WACAC,EACE,EADFA,iBACE,EAGgBC,oBAAS,GAHzB,mBAGlBC,EAHkB,KAGHC,EAHG,KAKzBC,qBAAU,WACNL,IAAaM,MAAK,WACdF,GAAgB,QAErB,CAAC,OAuBJ,OACI,yBAAKvC,UAAU,cACX,kBAAC,EAAD,CAASc,MAAM,cACf,yBAAKd,UAAU,mBACX,kBAAC,EAAD,CACIQ,MAAM,QACNC,MAAO6B,EAAgB/D,EA3BpB,CAAC,CAACO,GAAG,GAAI,CAACA,GAAG,GAAI,CAACA,GAAG,GAAI,CAACA,GAAG,GAAI,CAACA,GAAG,IA4BxC4B,OAAQ4B,EArBL,SAAA3B,GAEf,OADAA,EAAI,eAAOA,EAAP,CAAaK,SAAUL,EAAK7B,KAAOsD,IAChC,kBAAC,EAAmBzB,IAQF,WACzB,OAAO,kBAAC,EAAD,OAWKX,UAAU,iBACd,kBAAC,EAAD,SAOhBkC,EAAQhC,aAAe,CACnB3B,QAAS,KACT4D,WAAY,SAAAO,GAAC,OAAI,GACjBN,kBAAmB,GAGvB,IAKef,eALS,SAAC,GAAD,IAAE9C,EAAF,EAAEA,QAAF,MAAgB,CACpCA,QAASA,EAAQJ,YACjBiE,iBAAkB7D,EAAQH,cAGU,CACpC+D,WH3EsB,yDAAM,WAAMQ,GAAN,iBAAAC,EAAA,sEZ2FrB,IAAIC,SAAQ,SAAAC,GACfC,YAAW,WACPD,EAAQrD,KACT,QY9FqB,OAEtBd,EAFsB,OAI5BgE,EAAS,CACLjE,KdjBmB,cckBnBC,YAGDA,EAAQsD,SACAnD,EAAMH,EAAQ,GAAdG,GACP6D,EAAS,CACLjE,KdtBiB,gBcuBjBC,QAASG,IAEb6D,EAAS,CACLjE,KdzBe,cc0BfC,QAASG,KAjBW,2CAAN,wDG0EXuC,CAEZa,GC3DYc,EAfH,WACR,OACI,kBAAC,IAAD,CAAU1D,MAAOA,GAGL,kBAAC,EAAD,QCRA2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAS5C,OAAO,kBAAC,EAAD,MAAS6C,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.81ed7c00.chunk.js","sourcesContent":["import {\n    GET_MATTERS,\n    REMOVE_MATTER,\n    SELECT_MATTER,\n    READ_MATTER\n} from \"actions/matters/types\";\n\n\nconst defaultState = {\n    mattersList: [],\n    selectedId: -1\n};\n/**\n * @description the matter store\n * @param {array} state\n * @param {object} action\n * @returns {*}\n */\nexport default (state=defaultState, action) => {\n\n    let mattersList;\n    switch (action.type) {\n        case GET_MATTERS:\n            return {...state, mattersList: action.payload};\n        case REMOVE_MATTER:\n            mattersList = state.mattersList.filter(matter => matter.id !== action.payload.id);\n            return {...state, mattersList};\n        case SELECT_MATTER:\n            return {...state, selectedId: action.payload};\n        case READ_MATTER:\n            mattersList = state.mattersList.map(matter => {\n                if(matter.id === action.payload.id) matter.readStatus = true;\n                return matter;\n            });\n            return {...state, mattersList};\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\n\nimport mattersReducer from './mattersReducer';\n\nconst rootReducer = combineReducers({\n    matters: mattersReducer\n});\n\nexport default rootReducer;","\nexport const GET_MATTERS = 'GET_MATTERS';\nexport const REMOVE_MATTER = 'REMOVE_MATTER';\nexport const SELECT_MATTER = 'SELECT_MATTER';\nexport const READ_MATTER = 'READ_MATTER';\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport rootReducer from 'reducers'\n\n\nconst middlewareEnhancer = applyMiddleware(thunkMiddleware);\nconst composedEnhancers = compose(middlewareEnhancer);\nconst store = createStore(rootReducer, undefined, composedEnhancers)\n\nexport default store;","// Ordinarily for something like this I would use\n// axios to make requests etc. For this, I have just\n// created a quick mock call with a promise.\n\n\nconst MATTERS = [\n    {\n        id: 0,\n        from: 'John Smith',\n        summary: 'This is a summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n John Smith',\n        readStatus: false,\n        date: '2020/03/01'\n    },\n    {\n        id: 1,\n        from: 'Capita plc',\n        summary: 'Monetary Issue',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Capita Plc',\n        readStatus: false,\n        date: '2020/02/27'\n    },\n    {\n        id: 2,\n        from: 'Sam Blake',\n        summary: 'Fraudulent Claims',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Sam Blake',\n        readStatus: false,\n        date: '2020/02/26'\n    },\n    {\n        id: 3,\n        from: 'Arrow Group',\n        summary: 'This is another summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Arrow Group',\n        readStatus: false,\n        date: '2020/02/24'\n    },\n    {\n        id: 4,\n        from: 'Jade Parson',\n        summary: 'Tax Fraud',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Jade Parson',\n        readStatus: false,\n        date: '2020/02/21'\n    },\n    {\n        id: 5,\n        from: 'John Smith',\n        summary: 'Cease and Desist',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n John Smith',\n        readStatus: false,\n        date: '2020/03/01'\n    },\n    {\n        id: 6,\n        from: 'Capita plc',\n        summary: 'This is another summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Capita Plc',\n        readStatus: false,\n        date: '2020/02/27'\n    },\n    {\n        id: 7,\n        from: 'Sam Blake',\n        summary: 'This is another summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Sam Blake',\n        readStatus: false,\n        date: '2020/02/26'\n    },\n    {\n        id: 8,\n        from: 'Arrow Group',\n        summary: 'This is another summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Arrow Group',\n        readStatus: false,\n        date: '2020/02/24'\n    },\n    {\n        id: 9,\n        from: 'Jade Parson',\n        summary: 'This is another summary about something',\n        content: 'Dear Sir/Madam, \\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \\n Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat.' +\n            ' non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \\n Jade Parson',\n        readStatus: false,\n        date: '2020/02/21'\n    }\n];\n\n/**\n * @description A mock api call to return matters.\n * @returns {Promise<any>}\n */\nexport const getMatters = () => {\n\n    return new Promise(resolve =>  {\n        setTimeout(() => {\n            resolve(MATTERS);\n        }, 2000);\n    });\n\n};","import React from 'react';\n\n/**\n * @description Renders the content in a circle\n * @param {string} display - the content to be rendered\n * @returns {*}\n * @constructor\n */\nconst Avatar = ({display}) => (\n    <div\n        className=\"avatar\"\n        data-test=\"avatar\">\n        {display}\n    </div>\n);\n\nAvatar.defaultProps = {\n    display: ''\n};\n\nexport default Avatar;","import Avatar from './Avatar';\n\nexport default Avatar;","import React from 'react';\n\n/**\n * @description A basic button wrapper\n * @param {string} type - type of button\n * @param onClick\n * @param {string} className - className to be passed\n * @param children\n * @returns {*}\n * @constructor\n */\nconst Button = ({\n                    type,\n                    onClick,\n                    className,\n                    children\n                }) => (\n    <button\n        onClick={onClick}\n        className={`${className} btn btn-${type}`}>\n        {children}\n    </button>\n);\n\nButton.defaultProps = {\n    type: 'primary',\n    className: '',\n    onClick: () => true\n};\n\nexport default Button;","import Button from './Button';\n\nexport default Button;","import React from 'react';\n\n/**\n * @description Loader for multiple urposes\n * @param className\n * @returns {*}\n * @constructor\n */\nconst Loader = ({className}) => <div className={`${className} loader`}/>;\n\nLoader.defaultProps = {\n    className:''\n};\n\nexport default Loader;","import Loader from './Loader';\n\nexport default Loader;","import React, {Fragment} from 'react';\n\n/**\n * @description Renders a list of of items with a title\n * @param {string} title - title to be shown above the list\n * @param {array} items - items to be passe to renderProps\n * @param className - className to be added to the list\n * @param render - will be called on each item, should returns an `li`\n * @returns {*}\n * @constructor\n */\nconst SideList = ({\n                      title,\n                      items,\n                      className,\n                      render\n                  }) => {\n\n    return (\n        <div className={`side-list ${className}`}>\n            <div className=\"title\">\n                {title}\n            </div>\n            <ul>\n                {items.map(item => <Fragment key={item.id}>{render(item)}</Fragment>)}\n            </ul>\n        </div>\n    )\n\n};\n\nSideList.defaultProps = {\n    title: '',\n    items: [],\n    className: '',\n    render: () => true\n};\n\nexport default SideList;","import SideList from './SideList';\n\nexport default SideList;","import React from 'react';\n\n/**\n * @description - Toolbar to be rendered at the top of the app\n * @param {string} brand - the name of the company/app\n * @returns {*}\n * @constructor\n */\nconst ToolBar = ({brand}) => {\n    return (\n        <div className=\"tool-bar\">\n            <div className=\"title\">{brand} - Legal Matters</div>\n        </div>\n    )\n};\n\nToolBar.defaultProps = {\n    brand: ''\n};\n\nexport default ToolBar;","import ToolBar from './ToolBar';\n\nexport default ToolBar;","import React from 'react';\nimport {connect} from 'react-redux';\nimport { Email, StarBorder } from '@material-ui/icons';\n\nimport {Avatar} from 'components/lib';\nimport {selectMatter} from \"actions/matters\";\n\n/**\n * @description A list item that displays basic matter details.\n * @param {integer} id - the id of the matter\n * @param {string} from - the sender of the matter\n * @param {string} summary - the summary or `title` of the matter\n * @param {boolean} selected - whether or not the item is currently displaying\n * @param {function} selectMatter - action creator to select mattter\n * @param {boolean} readStatus - whether or not the matter has been read\n * @returns {*}\n * @constructor\n */\nconst MatterListItem = ({\n                            id,\n                            from,\n                            summary,\n                            selected,\n                            selectMatter,\n                            readStatus\n                        }) => {\n    return (\n        <li\n            className={selected ? 'selected': ''}\n            onClick={() => selectMatter(id)}>\n            <Avatar display={from[0]}/>\n            <div className=\"detail\">\n                <div className=\"name\">{from}</div>\n                <div className=\"summary\">\n                    {summary}\n                </div>\n            </div>\n            <MatterStatusIcons readStatus={readStatus}/>\n        </li>\n    )\n};\n\nMatterListItem.defaultProps = {\n    id: -1,\n    from: '',\n    summary: '',\n    selected: false,\n    selectMatter: () => true\n};\n\n/**\n * @description Show matter item status'\n * @param {boolean} readStatus\n * @returns {*}\n * @constructor\n */\nconst MatterStatusIcons = ({readStatus}) => {\n    return (\n        <div className=\"status-icons\">\n            {readStatus ? null : <Email />}\n            <StarBorder className=\"star\" />\n        </div>\n    )\n};\n\nMatterStatusIcons.defaultState = {\n    readStatus: false\n};\n\nexport default connect(null, {\n    selectMatter\n})(MatterListItem);","import {\n    GET_MATTERS,\n    SELECT_MATTER,\n    READ_MATTER\n} from \"./types\";\nimport {\n    getMatters as apiGetMatters\n} from 'api/matters';\n\n/**\n * @description Returns the matters\n * @returns {Function}\n */\nexport const getMatters = () => async dispatch => {\n\n    const payload = await apiGetMatters();\n\n    dispatch({\n        type: GET_MATTERS,\n        payload\n    });\n\n    if(payload.length) {\n        const {id} = payload[0];\n        dispatch({\n            type: SELECT_MATTER,\n            payload: id\n        });\n        dispatch({\n            type: READ_MATTER,\n            payload: id\n        });\n    }\n\n};\n\n/**\n * @description Will select a matter to read\n * @param {integer} id - the matter id\n * @returns {{payload: *, type: string}}\n */\nexport const selectMatter = id => ({\n    type: SELECT_MATTER,\n    payload: id\n});\n\n\n/**\n * @description Will mark a matter as read\n * @param {integer} id - the matter id\n * @returns {{payload: *, type: string}}\n */\nexport const readMatter = id => ({\n    type: READ_MATTER,\n    payload: id\n});","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {\n    Avatar,\n    Button,\n    Loader\n} from 'components/lib';\nimport {formatDate} from 'utils/utilFuncs';\n\n/**\n * @description Shows the full matter content.\n * @param {string} from - the sender of the matter\n * @param {string} summary - the summary/title of the matter\n * @param {string} content - the content of the matter\n * @param {string} date - matter creation date\n * @returns {null}\n * @constructor\n */\nconst MatterViewer = ({\n                          from,\n                          summary,\n                          content,\n                          date\n                      }) => {\n\n    const renderMatter = () => {\n\n        return (\n            <div className=\"matter\">\n                <div className=\"summary\">\n                    {summary}\n                </div>\n                <div className=\"from\">\n                    <Avatar display={from[0]}/>\n                    {from}\n                    {typeof date !== 'undefined' ?\n                        <div className=\"date\">{formatDate(new Date(date))}</div>\n                        : null\n                    }\n                </div>\n                <hr/>\n                <div className=\"content\">\n                    {content.split('\\n').map(i => <p>{i}</p>)}\n                </div>\n                <div className=\"actions\">\n                    <Button>Mark as Done</Button>\n                    <Button>Mark on Hold</Button>\n                    <Button>Respond</Button>\n                </div>\n            </div>\n        )\n    };\n\n    const showLoaders = () => {\n        return (\n            <div className=\"matter-viewer-loader\">\n                <Loader className=\"loader-main\"/>\n                <Loader className=\"loader-detail\"/>\n            </div>\n        )\n    };\n\n\n    return typeof from !== 'undefined' ? renderMatter() : showLoaders();\n};\n\nMatterViewer.defaultProps = {\n    summary: '',\n    content: '',\n};\n\nconst mapStateToProps = ({matters}) => {\n    const matter = matters.mattersList.filter(matter => matter.id === matters.selectedId);\n    return matter.length ? matter[0] : {};\n};\n\nexport default connect(mapStateToProps)(MatterViewer);","/**\n * @description formats data to human readable\n * @param date\n * @returns {string}\n */\nexport const formatDate = date => {\n    const\n        monthNames = [\n            \"January\", \"February\", \"March\",\n            \"April\", \"May\", \"June\", \"July\",\n            \"August\", \"September\", \"October\",\n            \"November\", \"December\"\n        ],\n        day = date.getDate(),\n        monthIndex = date.getMonth(),\n        year = date.getFullYear();\n\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n};","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {\n    getMatters,\n} from \"actions/matters\";\n\nimport {\n    SideList,\n    ToolBar,\n    Loader\n} from 'components/lib';\n\nimport MatterListItem from './MatterListItem';\nimport MatterViewer from './MatterViewer';\n\n/**\n * @description Matters is responsible for organising matters.\n * @param {array} matters - Matters for particular user\n * @param {function} getMatters - gets matters via redux\n * @param {integer} selectedMatterId - id of selected matter\n * @returns {*}\n * @constructor\n */\nconst Matters = ({\n                           matters,\n                           getMatters,\n                           selectedMatterId\n                       }) => {\n\n    // Confirms loaded- I would probably make a custom hook for this\n    const [contentLoaded, setLoadedStatus] = useState(false);\n\n    useEffect(() => {\n        getMatters().then(() => {\n            setLoadedStatus(true);\n        })\n    }, [null]);\n\n    const loaderList = [{id:0}, {id:1}, {id:2}, {id:3}, {id:4}];\n\n    /**\n     * @description\n     * @param item\n     * @returns {*}\n     */\n    const renderItem = item => {\n        item = {...item, selected: item.id === selectedMatterId};\n        return <MatterListItem {...item}/>;\n    };\n\n\n    /**\n     * @description Renders loaders when not finished loading\n     * @returns {*}\n     */\n    const renderListItemLoader = () => {\n        return <Loader />\n    };\n\n    return (\n        <div className=\"matter-app\">\n            <ToolBar brand=\"Autologyx\"/>\n            <div className=\"content-wrapper\">\n                <SideList\n                    title='Inbox'\n                    items={contentLoaded ? matters : loaderList}\n                    render={contentLoaded ? renderItem : renderListItemLoader}\n                    className=\"matters-list\"/>\n                <MatterViewer/>\n            </div>\n\n        </div>\n    )\n};\n\nMatters.defaultProps = {\n    matters: null,\n    getMatters: _ => true,\n    selectedMatterId: -1\n};\n\nconst mapStateToProps = ({matters}) => ({\n    matters: matters.mattersList,\n    selectedMatterId: matters.selectedId\n});\n\nexport default connect(mapStateToProps, {\n    getMatters,\n})(Matters);","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport 'site_media/styles/base.css';\nimport store from 'utils/store';\nimport MatterManager from 'components/sections/matters/Matters';\nimport {\n    SandBox\n} from \"components/lib\";\n\n/**\n * @description Main wrapper for app\n * @returns {*}\n * @constructor\n */\nconst App = () => {\n    return (\n        <Provider store={store}>\n            {\n                process.env.NODE_ENV === \"production\" ?\n                    <MatterManager/> :\n                    <SandBox>\n                        <MatterManager/>\n                    </SandBox>\n            }\n\n        </Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}